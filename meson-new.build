# Specify the project
project('ibox', 'c',
	version : '0.0.1',
	license : 'BSD 3-Clause',
	meson_version : '>=0.50.0',
	default_options : ['b_asneeded=false', 'b_lundef=false', 'buildtype=plain', 'c_std=gnu99'])

# Finds subdirectory for asm files depending on architecture
arch_path = 'kernel/arch/@0@/'.format(host_machine.cpu_family())

# Path to linker file
arch_linker_file = meson.current_source_dir() + '/' + arch_path + 'linker.ld'

# Sub directory for arch specific files
subdir(arch_path)

# Script that runs the ISO Image with qemu and bochs
run_target('qemu', command : 'tools/scripts/qemu-meson-wrapper.sh')
run_target('bochs', command : 'tools/scripts/bochs-meson-wrapper.sh')

if meson.is_cross_build()
	c_args = meson.get_cross_property('c_args')
	link_args = meson.get_cross_property('c_link_args')
endif

# Compiler options based on type of compiler used
compiler = meson.get_compiler('c')
if compiler.get_id() == 'gcc'
	c_args = ['-Wall', '-Wextra', '-m32']
	link_args = ['-T', arch_linker_file, '-Wl,-Map=info.map', '-Wl,-m,elf_i386']
else
	error('No compiler found')
endif

# Executable
image = executable(
	'kernel.elf',
	asm_srcs,
	link_args : link_args)
